# console getty
#
start on started system 

export LANG LC_ALL

env LIBC_FATAL_STDERR_=1
env STDERR=/tmp/console.err

pre-start script

# TODO - we need to avoid doing for production and add back in DO_NOT_KILL_UART
# kill the uart gate on anything we find to keep console from shutting down
# it is believed that only the console has it, but can't hurt for production.
# to do them all (and some platforms, like yoshi, don't have it yet)

  for i in $(find /sys/devices/platform/mxc*uart* -name uart_clk_state); do
    echo 0 > $i
  done
end script

respawn

script
# default unless we see e.g. console=ttymxc0,115200 on the kernel command line

  UART=ttymxc0
  BAUD=115200

  # Based on https://wiki.labcollab.net/confluence/display/thorapollo/Cognac+security+lockdown+guideline
  # This feature is introduced from Zelda platform. For older platforms, we keep the login unlocked

  # default to unlock device
  prodVersion=0
  unlockedkernel=true
  secureCpu=0

  for i in $(cat /proc/cmdline); do
    case "$i" in
      console=*)
        x=${i#console=}
        x=${x//,/ }
        if [ -n "$x" ]; then
          set $x
          [ -n "$1" ] && UART=$1
          [ -n "$2" ] && BAUD=$2
        fi
        ;;
      androidboot.prod*)
        val=$i
        prodVersion=${val##*=}
        ;;
      androidboot.unlocked_kernel*)
        val=$i
        unlockedKernel=${val##*=}
        ;;
      secure_cpu*)
        val=$i
        secureCpu=${val##*=}
        ;;
    esac
  done
  # remove non-number from BAUD
  BAUD=${BAUD/[^0-9]*/}

#We determine to execute getty, which prompts for the login password using the values in the /proc/cmdline file
#The locked variable is used lock the prompt

if [ "$prodVersion" = "0" -o "$unlockedKernel" = "true" -o "$secureCpu" = "0" ]; then
    #Unlocked Prompt if: unlockedKernel or not prod or not secure cpu
    exec getty -L $BAUD /dev/$UART 2>> $STDERR
else
    exec getty -L $BAUD /dev/$UART -i -n -l /etc/upstart/custom-login 2>> $STDERR
fi

end script

post-stop script
        source /etc/upstart/functions
        libc_scan
end script
