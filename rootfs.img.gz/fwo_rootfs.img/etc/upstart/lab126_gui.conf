start on langpicker_ready
stop on stopping x or ota-update

emits start_splash

env MAX_RESTARTS=3
env MAX_REBOOTS=2
env LANG_PICKER_SCREEN_SHOWN=0
env BOOT_WITH_AIRPLANE_MODE="/var/local/BOOT_WITH_AIRPLANE_MODE"

pre-start script
    source /etc/upstart/functions
    source /etc/upstart/upstart_functions
    source /etc/upstart/monitor_functions
    source /etc/upstart/splash
    source /etc/upstart/shutdown_modes
    source /usr/bin/record_device_metric.sh

    export FRAMEWORK_HALT=2
    # Prevent children from running if an update is taking place
    ret=$(f_upstart_job_status ota-update)
    if [ "$ret" -eq "$UP_JOB_STS_RUNNING" ]; then
        f_log W $UPSTART_JOB "otarunning=true" "monitor triggered during ota update"
        stop
        exit 0
    fi

    # See if we've unsuccessfully rebooted too many times.
    REBOOTS=$(f_monitor_persist_read_count ${UPSTART_JOB})
    if [ "$REBOOTS" -ge "$MAX_REBOOTS" ]; then
        SHOW_CS_SCREEN=0
        if [ "$(lipc-get-prop com.lab126.cmd wirelessEnable)" -eq 1 ] ; then
            touch "$BOOT_WITH_AIRPLANE_MODE" || true
            lipc-set-prop com.lab126.cmd wirelessEnable 0 || true
            f_log I $UPSTART_JOB "reboots=${REBOOTS},max=${MAX_REBOOTS}" "Booting with airplane mode ON"
        # if we have manually put the device in airplane mode for a final retry, disable it now
        # This will ensure that failure case logs will get uploaded and not blocked by airplane mode.
        # Upload of below case will happen automatically in shutdown.conf
        elif [ -e "$BOOT_WITH_AIRPLANE_MODE" ] ; then
            if [ "$REBOOTS" -gt "$MAX_REBOOTS" ] ; then
                rm -f "$BOOT_WITH_AIRPLANE_MODE" || true
                f_log C $UPSTART_JOB "Airplainmode_off" " Framework start failed even after device goes to airplane mode. Final recovery failed"
                lipc-set-prop com.lab126.cmd wirelessEnable 1 || true
                set +e
                record_device_metric upstart lab126_gui frameworkStartFailedWithAirplaneMode 1 '' $METRIC_PRIORITY_HIGH $METRIC_TYPE_COUNTER
                set -e
                SHOW_CS_SCREEN=1
            fi
        else
            SHOW_CS_SCREEN=1
        fi

        if [ "$SHOW_CS_SCREEN" -eq 1 ] ; then
            f_log C $UPSTART_JOB "reboots=${REBOOTS},max=${MAX_REBOOTS}" "shutting down and showing customer service page"
            echo $FRAMEWORK_HALT > /var/local/halt_reason
            f_upstart_clear_counters $UPSTART_JOB
            # if we have then stop lab126_gui and shutdown (halt) while displaying
            # the customer service page
            stop
            start shutdown SHUTDOWN_MODE=$SHUTDOWN_MODE_CUST_SERVICE
        fi
    fi

    # if we are being restarted by the monitor, then re-init the splash screen 
    if [ -n $MONITOR_RESTART ]; then
        splash_cleanup
    fi
    splash_init || f_log E $UPSTART_JOB "cannot init splash module"

    if [ $LANG_PICKER_SCREEN_SHOWN -eq 1 ]; then
        f_emit start_splash SPLASH_PROGRESS=5
    else
        f_emit start_splash
    fi

    if [ -z $MONITOR_RESTART ]; then
        # if we're not being restarted by the monitor, then clear the session count and exit
        f_monitor_session_clear_count ${UPSTART_JOB}
        exit 0
    fi

    # See if we're been restarted too many times and take appropriate actions
    RESTARTS=$(f_monitor_session_read_count ${UPSTART_JOB})
    if [ "$RESTARTS" -ge "$MAX_RESTARTS" ]; then
        REBOOTS=$(f_monitor_persist_inc_count ${UPSTART_JOB})

        f_log C $UPSTART_JOB "restarts=${RESTARTS},max=${MAX_RESTARTS},reboots=${REBOOTS}" "rebooting system"
        if [ $REBOOTS -eq 1 ]; then 
            f_upstart_save_first_reboot_logs
            upload_log || true
        fi

        # don't startup this job, reboot instead
        stop
        reboot
    else
        f_log W $UPSTART_JOB "restarts=${RESTARTS},max=${MAX_RESTARTS}" "starting $UPSTART_JOB"

        # Sleep to avoid respawning too fast and causing reboot
        sleep 1
    fi
end script
