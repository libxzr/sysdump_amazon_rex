# /keys is the persistent read-write store

start on started filesystems
stop on stopping filesystems

export LANG LC_ALL

emits mounted_keys

pre-start script
  source /etc/default/layout
  source /etc/upstart/functions

  set +e

  case "$(f_board)" in
    moonshine|stinger|jaeger)
      # DHAv2
      keyfile_1="/keys/dha_key"
      keyfile_2="/keys/dha_certificate.pem"
      ;;
    cognac)
      # DHAv1
      keyfile_1="/keys/soft_dha.der"
      keyfile_2="/keys/soft_dha.hmac"
      ;;
    *)
      # NO DHA
      f_log I filesystems_keys "not applicable for this device type" ""
      exit 0
  esac

  local=/dev/$ROOT$KEYS_P

  # First take care of /keys directory
  if [ ! -d "/keys" ]; then
    # Mouting root RW
    f_log D filesystems_keys createkeys "Creating keys directory before remount rw"
    mntroot rw
    f_log D filesystems_keys createkeys "Creating keys directory after remount rw"
    mkdir /keys
    retVal=$?
    if [ $retVal -ne 0 ] ; then
      f_log E filesystems_keys createkeys "mkdir failed, returnValue=$retVal"
      exit 0
    fi
    sync
    # Mounting root RO
    f_log D filesystems_keys createkeys "Creating keys directory before remount ro"
    mntroot ro
    f_log D filesystems_keys createkeys "Creating keys directory after remount ro"
  fi

  f_log I filesystems_keys mouting_keys "mounting keys partition"
  mount -t ext3 -o noatime -o nodiratime -o ro $local /keys
  retVal=$?
  if [ $retVal -ne 0 ] ; then
    f_log E filesystems_keys mouting_keys "mount failed, returnValue=$retVal"
    exit 0
  fi

  # Checking DHA keys
  if [ ! -s "$keyfile_1" ] || [ ! -s "$keyfile_2" ] || \
     [ $(stat -c '%U' "$keyfile_1") != "framework" ] || \
     [ $(stat -c '%U' "$keyfile_2") != "framework" ] ; then

    f_log I filesystems_keys fixdhakeys "Fixing DHA key files"

    # Mouting /keys rw
    mount -o rw,remount /keys
    retVal=$?
    if [ $retVal -ne 0 ] ; then
      f_log E filesystems_keys recoverkeys "remount /keys rw failed, returnValue=$?"
      exit 0
    fi

    if [ ! -s "$keyfile_1" ] || [ ! -s "$keyfile_2" ]; then
      # Recovering DHA key files
      f_log D filesystems_keys missingdhakeys "Missing DHA key files"
      f_log I filesystems_keys recoverkeys "Recovering DHA key files"

      /usr/sbin/idme --tz_keys -s | /bin/tar zxf - -C /keys
      retVal=$?
      if [ $retVal -ne 0 ] ; then
        f_log E filesystems_keys recoverkeys "cannot recover from idme, returnValue=$retVal"
        exit 0
      fi
    fi

    # Change owner and permission
    f_log I filesystems_keys recoverkeys "Fixing DHA key files permission"
    chown framework:javausers /keys/*
    retVal=$?
    if [ $retVal -ne 0 ] ; then
      f_log E filesystems_keys  recoverkeys "chown failed, returnValue=$retVal"
      exit 0
    fi
    chmod 660 /keys/*
    retVal=$?
    if [ $retVal -ne 0 ] ; then
      f_log E filesystems_keys  recoverkeys "chmod failed, returnValue=$retVal"
      exit 0
    fi
    sync

    # Mounting /keys ro
    mount -o ro,remount /keys
    retVal=$?
    if [ $retVal -ne 0 ] ; then
      f_log E filesystems_keys recoverkeys "remount /keys ro failed, returnValue=$retVal"
      exit 0
    fi

    f_log I filesystems_keys fixdhakeys "DHA key files fixed"
  fi

  f_emit mounted_keys
  f_milestone fs40
end script

post-stop script
  source /etc/upstart/functions

  sync || true
  f_log I filesystems_keys "filesystem sync done"

  f_log I filesystems_keys unmount_keys "Unmounting Keys"
  umount /keys
  retVal=$?
  f_log I filesystems_keys post_stop_script "after umount"
  if [ $retVal -ne 0 ] ; then
    f_log E filesystems_keys "umount failed" "returnValue=$retVal"
  fi
end script
