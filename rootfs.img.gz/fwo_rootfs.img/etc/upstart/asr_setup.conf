start on blanket_loaded_langpicker or audio_device_detected or langpicker_load_complete or user_store_available

stop on stopping x

emits start-asr
env ASR_DEVICE_FILE_NAME=/var/local/system/ASR_DEVICE
task

script
    source /etc/upstart/env
    source /etc/upstart/functions

    if [ ! -e "/var/local/IN_ASR_MODE" ]; then
        f_log I asr_setup "Not in asr mode::reason=flag file not present. shutting down asr_setup"
        exit 0
    fi

    if [ "$(lipc-get-prop com.lab126.winmgr winmgrReady)" -eq 1 ] ; then
        f_log I asr_setup "winmgr_running=true. winmgr is ready"
    else
        # This is done for mitigating the possibility of a race when winmgr is not up by this point.
        # For this, we are not changing the upstart dependencies (say, for BTFD etc.) since
        # at this point, impact of that on perf and other use-cases is not fully known.
        # Refer JNINETWO-4004 for more details about the issue.
        f_log I asr_setup "winmgr_runnnig=false. winmgr is not ready"
        bt_supported=`devcap-get-feature -a bluetooth`
        if [ "$bt_supported" -eq "0" ]; then
            f_log I asr_setup "Dongle case: shutting down asr_setup"
            exit 0
        fi
        lipc-wait-event -s 5 com.lab126.winmgr winmgrState || true
        if [ "$(lipc-get-prop com.lab126.winmgr winmgrReady)" -eq 0 ] ; then
           f_log I asr_setup  "Bluetooth case: shutting down asr_setup"
           exit 0
        fi
    fi

    if [ "$(lipc-get-prop com.lab126.audiomgrd audioOutputConnected)" -eq 1 ] && [ "$(lipc-get-prop com.lab126.volumd userstoreIsAvailable)" -eq 1 ] ; then
        if !( [ -e /mnt/us/voice/vox_en_us_salli22i ] && [ -e /mnt/us/voice/lang_en_us.dat ] ) ; then
           lipc-set-prop com.lab126.pillow pillowAlert '{"clientParams":{"alertId":"voiceFileNotDetectedAlert", "show":true}}' &
           lipc-send-event com.lab126.system.event screenReaderDisabled -s "VoiceFileNotDetected" || true
           f_log I asr_setup "Voice files are not present, shutting down asr_setup"
           mplay /usr/share/wavFiles/voiceFailure.wav
           
           # teardown the stack
           lipc-set-prop com.lab126.system stopVoiceView "stopVoiceView"
           exit 0
        fi
        if ( [ -e /var/local/system/userpasswdenabled ] ) ; then
            lipc-set-prop com.lab126.pillow pillowAlert '{"clientParams":{"alertId":"passcodeEnabledASRNotSupportedAlert", "show":true}}' &
            lipc-send-event com.lab126.system.event screenReaderDisabled -s "PasscodeEnabled" || true
            f_log I asr_setup "Device Passcode is enabled, shutting down asr_setup"
            mplay /usr/share/wavFiles/passcodeEnabled.wav
            
            # teardown the stack
            lipc-set-prop com.lab126.system stopVoiceView "stopVoiceView"
            exit 0
        fi


          f_log I asr_setup "audio connected. Emitting start-asr event"
          f_emit start-asr
    fi
end script
