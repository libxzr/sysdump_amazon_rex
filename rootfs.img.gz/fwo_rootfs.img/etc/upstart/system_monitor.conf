start on (stopped modules RESULT!=ok) or (stopped display RESULT!=ok) or (stopped battery RESULT!=ok) or (stopped prereg RESULT!=ok) or (stopped filesystems RESULT!=ok) or (stopped filesystems_var_local RESULT!=ok) or (stopped filesystems_userstore RESULT!=ok) or (stopped filesystems_keys RESULT!=ok) or (stopped filesystems_setup RESULT!=ok) or (stopped network RESULT!=ok) or (stopped system)

task

env MONITOR_TASK="system"
env REBOOT_TIMEOUT=20

script
    source /etc/upstart/functions
    source /etc/upstart/monitor_functions
    source /etc/tinyrot.conf

    # log what we're doing
    f_log C $UPSTART_JOB "job=${JOB},sts=${EXIT_STATUS},sig=${EXIT_SIGNAL}" "hard-reboot in ${REBOOT_TIMEOUT} seconds"

    # see if /var/local is mounted
    if (mount | grep ${MNTLOG_MP}) ; then
        # see if the archive dir (/var/local/log) exists
        if [ -d ${ARCHIVE_DIR} ]; then
            tinyrot --force || f_log W ${UPSTART_JOB} "tinyrot_failed"
        fi

        # bump the reboot count
        REBOOT_COUNT=$(f_monitor_persist_inc_count ${MONITOR_TASK})
        f_log I ${UPSTART_JOB} "task=${MONITOR_TASK},reboots=${REBOOT_COUNT}"
    fi
    sync

    # sleep to allow running tasks time to finish/make progress if they can
    sleep $REBOOT_TIMEOUT

    # attempt to rotate the logs again just before we reboot the device
    # see if /var/local is mounted
    if (mount | grep ${MNTLOG_MP}) ; then
        # see if the archive dir (/var/local/log) exists
        if [ -d ${ARCHIVE_DIR} ]; then
            tinyrot --force || f_log W ${UPSTART_JOB} "tinyrot_failed"
        fi
    fi
    sync
    
    # perform hard reboot of the system 
    reboot -f
end script
