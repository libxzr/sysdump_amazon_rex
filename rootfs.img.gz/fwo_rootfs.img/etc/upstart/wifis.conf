# wifi supplicant

# Let wifid start the supplicant (JTWO-2480)
# start on started lab126
stop on stopping lab126

export LANG LC_ALL

env SUP=wpa_supplicant
env IF=wlan0
env LIBC_FATAL_STDERR_=1
env STDERR=/tmp/wifis.err

pre-start script
  source /etc/upstart/functions
  f_wifi			# bail if we do not have wifi
  # bail if WIFIOFF exists (internal feature only)
  ! internal_features_enabled || [ ! -f /mnt/us/WIFIOFF ]

  bootmode=`cat /proc/bootmode`

  # Wait for the driver to be loaded, otherwise the supplicant exits
  # because of failing ioctl() calls.
  i=0
  while [ $i -lt 10 ]; do
      # Check to see if the driver is ready
      if is_wlan0_ready; then
          # This is only applicable to the ar6003 driver, not the
          # ath6kl_sdio driver used on wario and later platforms.
          # Although just to make things fun we use the old driver
          # even on wario diag images.
          # ar6003 is used only in devices before wario platform. 
          # So, added those platform.
          if [ "$(f_platform)" == "yoshi" -o "$(f_platform)" == "yoshime3" -o "$bootmode" == "diags" ]; then
            wmiconfig -i wlan0 --setdbglogconfig --mmask=0xffff
          fi
          break
      else
          sleep 2
      fi
      i=$(($i + 1))
  done
  [ $i -lt 10 ]         # Exit with error if we timed out
end script

script
  source /etc/upstart/functions

  bootmode=`cat /proc/bootmode`

  driver="nl80211"

  if [ "$(f_platform)" = "yoshi" -o "$(f_platform)" = "yoshime3" -o "$bootmode" = "diags" ]; then
      driver="wext"
  fi

  exec $SUP -t -c /etc/$SUP.conf -i $IF -d -s -D $driver $ARGS 2>> $STDERR
end script

post-stop script
  source /etc/upstart/functions
  libc_scan
end script
