# framework setup
# waits for framework started event, emits the framework ready event on success
# and then loads the appropriate modules for blanket

start on started framework
stop on stopping framework

task

emits blanket_unloaded_splash
emits blanket_loaded_usb
emits blanket_loaded_screensaver
emits framework_ready

env SCREENSAVER_SOURCE="com.lab126.hal.screensaver"
env SCREENSAVER_EVENT="goingToScreenSaver"
env SCREENSAVER_EVENT_VAL=2

env UPDATE_PWBIN="/var/local/UPDATE_PWBIN"
env BOOT_WITH_AIRPLANE_MODE="/var/local/BOOT_WITH_AIRPLANE_MODE"

script
    source /etc/upstart/env
    source /etc/upstart/functions
    source /etc/upstart/blanket_functions
    source /etc/upstart/splash
    source /usr/bin/record_device_metric.sh

    t0=$(f_ms)
    T1=130

    f_milestone fr51

    if [ -f /mnt/us/DEBUG_CVM_JDWP ] || [ -f /mnt/us/DEBUG_CVM_JDWP_SUSPEND ] || [ -f /mnt/us/PROFILE_CVM_NB ]
    then
        TO=0  # 0 apparently means "forever"
    else
        TO=105
    fi
    if [ $TRACK_MEMORY -eq 1 ]; then
        TO=0  # 0 apparently means "forever"
    fi

    if lipc-wait-event -s $TO com.lab126.kaf FrameworkStarted; then
        f_milestone fr99
        t1=$(f_ms)
        f_log I framework started "time=$t1,delta=$(( $t1 - $t0 ))"
        echo $(pidof cvm) > /var/run/cvm.pid
        ffsdStatus=$(lipc-get-prop -e -i -q com.lab126.ffsd ffsdStatus) || \
            f_log W framework_setup "cannot get ffsdStatus" ""
        f_log I framework_setup "ffs Status=$ffsdStatus" ""
        if [ -n "$ffsdStatus" ]; then
            delta=$(((( $t1 - $t0 )) / 1000))
            if lipc-wait-event -s $((  $T1 - $delta )) com.lab126.ffsd ffsCompleted; then
                f_log I framework_setup "ffs Completed" ""
                t2=$(f_ms)
                f_log I framework_setup "waited for ffs,delta=$(( $t2 - $t1 ))"
            else
                f_log W framework_setup "timed out waiting for ffsCompleted" ""
            fi
        else
            f_log I framework_setup "ffsd is not active or ffs is complete" ""
        fi
    else
        lv=$?
        t1=$(f_ms)
        # Check if some migration is happening
        delayFrameworkStart=$(lipc-get-prop -e -i -q com.lab126.kaf delayFrameworkStart) || \
            f_log W framework_setup "cannot get delayFrameworkStart" ""
        [ -z $delayFrameworkStart ] && $delayFrameworkStart="0"
        frameworkStarted=$(lipc-get-prop -e -i -q com.lab126.kaf frameworkStarted) || \
            f_log W framework_setup "cannot get frameworkStarted" ""
        [ -z $frameworkStarted ] && $frameworkStarted="0"
        if [ "$delayFrameworkStart" -eq "0" -a "$frameworkStarted" -eq "0" ]; then
                wirelessEnable=$(lipc-get-prop com.lab126.cmd wirelessEnable)
                f_log C framework timeout "pid=$(pidof cvm),sec=$TO,time=$t1,delta=$(( $t1 - $t0 )),lipc-wait-event=$lv" "FrameworkStarted not received wirelessEnable=$wirelessEnable"
		#The below command does not terminate the cvm.It issues a SIGQUIT to cvm , which prints the backtraces of all JAVA Threads.
                killall -QUIT cvm
                /usr/bin/dump-stack `pidof cvm`
                exit 1;
        fi

        if [ "$frameworkStarted" -eq "0" -a "$delayFrameworkStart" -eq "1" ]; then
                if lipc-wait-event -s $TO com.lab126.kaf FrameworkStarted; then
                    f_log I framework delayedStart "FrameworkStart received after delay" ""
                else
                    lv=$?
                    t1=$(f_ms)
                    frameworkStarted=$(lipc-get-prop -e -i -q com.lab126.kaf frameworkStarted) || \
                       f_log W framework_setup "cannot get frameworkStarted after delay"
                    [ -z $frameworkStarted ] && $frameworkStarted="0"
                    if [ "$frameworkStarted" -eq "0" ]; then
                        wirelessEnable=$(lipc-get-prop com.lab126.cmd wirelessEnable)
                        f_log C framework timeout "pid=$(pidof cvm),sec=$TO,time=$t1,delta=$(( $t1 - $t0 )),lipc-wait-event=$lv" "FrameworkStarted Not Received wirelessEnable=$wirelessEnable"
			 #The below command does not terminate the cvm.It issues a SIGQUIT to cvm , which prints the backtraces of all JAVA Threads.
			 killall -QUIT cvm
                        /usr/bin/dump-stack `pidof cvm`
                        exit 1;
                    fi
                fi
        fi

        f_milestone fr100
        t1=$(f_ms)
        f_log I framework started "time=$t1,delta=$(( $t1 - $t0 ))"
        echo $(pidof cvm) > /var/run/cvm.pid
    fi

    # once the framework has started successfully with airplane mode
    # remove the flag and switch airplane mode off as it is not a user preference
    # Also upload the logs to know how many customers benefit from this.
    if [ -e "$BOOT_WITH_AIRPLANE_MODE" ] ; then
        rm -f "$BOOT_WITH_AIRPLANE_MODE" || true
        f_log I framework_setup "Airplainmode_off framework start success post reboot in airplane mode" ""
        lipc-set-prop com.lab126.cmd wirelessEnable 1 || true
        set +e
        record_device_metric upstart framework_setup frameworkStartSuccessWithAirplaneMode 1 '' $METRIC_PRIORITY_HIGH $METRIC_TYPE_COUNTER
        set -e
        upload_log || true
    fi
    
    # load the usb module
    f_blanket_load_module usb

    # need to setup the screensaver before tearing down the splash
    # HACK until we have states in powerd that directly tell us
    # whether or not to be in screensaver
    RET=$(passwdlg --ntries 0; echo $?) || true
    if [ "$RET" -ne "0" ]; then
        lipc-set-prop com.lab126.winmgr passwordDialogEnabled -i 1
        # password is enabled, show the screensaver
        f_log I framework_setup "password=enabled" "showing screensaver"
        lipc-send-event -r 5 $SCREENSAVER_SOURCE $SCREENSAVER_EVENT -i $SCREENSAVER_EVENT_VAL
    else
        # password is disabled, see if powerd state != active
        state=$(lipc-get-prop -e -s -q com.lab126.powerd state) || \
            f_log W framework_setup "cannot get powerd state" "not showing screensaver"
        if [ "$state" != "" -a "$state" != "active" ]; then
            f_log I framework_setup "password=disabled" "showing screensaver"
            lipc-send-event -r 5 $SCREENSAVER_SOURCE $SCREENSAVER_EVENT -i $SCREENSAVER_EVENT_VAL
        fi
    fi

    # unload the module
    f_blanket_unload_module splash

    # notify powerd that there is no splash screen anymore
    lipc-send-event -r 5 com.lab126.hal bootSplashCleanup

    f_emit framework_ready
    if [ -e $UPDATE_PWBIN ] ; then
        rm -f $UPDATE_PWBIN || true
        lipc-set-prop com.lab126.ota startUpdate 1 || true
    fi
end script
