# Restart x when x (lxinit,blanket,awesome), x_setup or langpick fails
start on (stopped x RESULT!=ok) or (stopped x_setup RESULT!=ok) or (stopped langpicker RESULT!=ok)

# If dbus is also already going down then we don't want to restart or reboot.
stop on stopping dbus

task

env RESTART_LIMIT=5 # quick restart x 
env REBOOT_LIMIT=1 # reboot kindle

env JOB=x 
script
  source /etc/upstart/functions
  source /etc/upstart/monitor_functions
  source /etc/upstart/shutdown_modes
  
  export X_HALT=4
   
  f_log I x_monitor "x_monitor starts"

  # read in variables from files
  REBOOTS=$(f_monitor_persist_read_count $JOB)
  RESTARTS=$(f_monitor_session_read_count $JOB)
  f_log I x_monitor "read_counters" "" "REBOOTS=$REBOOTS, RESTART=$RESTARTS, REBOOT_LIMIT=$REBOOT_LIMIT, RESTART_LIMIT=$RESTART_LIMIT" ""
     
  if [ $REBOOTS -gt $REBOOT_LIMIT ]; then
    f_log C x_monitor "shutdown" "" "REBOOTS=$REBOOTS, REBOOT_LIMIT=$REBOOT_LIMIT, shutdown_mode=$SHUTDOWN_MODE_CUST_SERVICE" ""
    echo $X_HALT > /var/local/halt_reason
    f_upstart_clear_counters $JOB
    
    f_display repair
    start shutdown SHUTDOWN_MODE=$SHUTDOWN_MODE_CUST_SERVICE
  fi

  # increase restart count
  RESTARTS=$(f_monitor_session_inc_count $JOB)
  f_log I x_monitor "inc_restart" "" "RESTART=$RESTARTS, RESTART_LIMIT=$RESTART_LIMIT" ""
  
  if [ "$RESTARTS" -gt "$RESTART_LIMIT" ]; then
    REBOOTS=$(f_monitor_persist_inc_count $JOB) 
    # when reboot, session x restart counts will be reset. 
    f_log I x_monitor "inc_boot" "" "REBOOTS=$REBOOTS, REBOOT_LIMIT=$REBOOT_LIMIT" ""

    if [ $REBOOTS -eq 1 ]; then
      f_upstart_save_first_reboot_logs
    fi

    if [ "$REBOOTS" -gt "$REBOOT_LIMIT" ]; then
      f_log C x_monitor "shutdown" "" "REBOOTS=$REBOOTS, REBOOT_LIMIT=$REBOOT_LIMIT, shutdown_mode=$SHUTDOWN_MODE_CUST_SERVICE" ""
      echo $X_HALT > /var/local/halt_reason
      f_upstart_clear_counters $JOB
      
      echo "#################################################" >  /var/local/system/motd
      echo "#     E R R O R  *  E R R O R  *  E R R O R     #" >> /var/local/system/motd
      echo "#################################################" >> /var/local/system/motd
      echo "# x.conf failed to start. Reboot limit reached"    >> /var/local/system/motd
      echo "# REBOOTS=$REBOOTS, REBOOT_LIMIT=$REBOOT_LIMIT"    >> /var/local/system/motd
      echo "# To log into the device, remove files:"           >> /var/local/system/motd
      echo "# /var/local/upstart/x.restarts"                   >> /var/local/system/motd
      echo "# /var/run/upstart/x.restarts"                     >> /var/local/system/motd
      echo "#################################################" >> /var/local/system/motd
      
      f_display repair
      start shutdown SHUTDOWN_MODE=$SHUTDOWN_MODE_CUST_SERVICE
    else
      # reboot the system
      f_log I x_monitor "reboot" "" "" ""
      reboot
    fi
  else
    # we wait a little bit before a restart
    sleep 1

    f_log I x_monitor "restart" "" "job=${JOB}" ""
    start $JOB || f_log C x_monitor "can_not_start" "" "job=${JOB}" ""
  fi 
end script

