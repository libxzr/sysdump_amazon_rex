# If any of these apps stop through abnormal means then we restart the lab126_gui
start on (stopped kb RESULT!=ok) or (stopped framework RESULT!=ok) or (stopped framework_setup RESULT!=ok)

# If X is also already going down then we don't want to respawn or reboot
stop on stopping x

task

env RESTART_JOB=lab126_gui
export MONITOR_RESTART
script
    source /etc/upstart/functions
    source /etc/upstart/monitor_functions
    source /usr/bin/record_device_metric.sh

    STS_EXIT=""
    SIG_EXIT=""

    # log what happened and bump the count
    if [ -n "${EXIT_STATUS}" ]; then
        STS_EXIT=",sts=${EXIT_STATUS}"
    fi
    if [ -n "${EXIT_SIGNAL}" ]; then
        SIG_EXIT=",sig=${EXIT_SIGNAL}"
    fi
    
    f_log C $UPSTART_JOB "abnormalstop" "job=${JOB},res=${RESULT}${STS_EXIT}${SIG_EXIT}"
    record_device_metrics upstart lab126_gui_monitor abnormalFrameworkRestart 1 '' $METRIC_PRIORITY_HIGH $METRIC_TYPE_COUNTER
    lipc-send-event com.lab126.upstart abnormalRestart
    f_monitor_session_inc_count ${RESTART_JOB}

    # now restart the upstart job (if it's still running), can fail if x has crashed and job is stopping
    restart $RESTART_JOB MONITOR_RESTART=1 || \
        f_log I $UPSTART_JOB "job_not_running" "job=${RESTART_JOB}"
end script
